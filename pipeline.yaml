AWSTemplateFormatVersion: 2010-09-09
Description: TDE pipeline Demo v1
# DISCLAIMER: This Cloudformation script is only for demo purposes and does not 
# incorporate security best practices. Should not be used as-is in a live
# environment

Parameters:
  ProjectName:
    Description: Project Name for this demo
    Type: String
    Default: tde-demo
  RepositoryName:
    Description: Github Repository pipeline will be watching
    Type: String
    Default: tde-demo
  GitHubOwner:
    Description: Owner of github repo
    Type: String
  BranchName:
    Description: Github branch name
    Type: String
    Default: master 

Resources:
  # TODO: The contents of this bucket can be encrypted
  ArtifactBucket:
    Type: AWS::S3::Bucket

  ArtifactBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactBucket
      PolicyDocument:
        Statement:
          - Action:
            - s3:*
            Effect: Allow
            Resource:
              - !GetAtt ArtifactBucket.Arn
              - !Sub ${ArtifactBucket.Arn}/*
            Principal:
              AWS:
                - !GetAtt PipelineServiceRole.Arn
    
  PipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-PipelineServiceRole
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS: !Ref AWS::AccountId
              Service:
                - codepipeline.amazonaws.com
                - codebuild.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      Policies:
        - PolicyName: CodebuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - codebuild:*
                Effect: Allow
                Resource: "*"
        - PolicyName: ArtifactBucketAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: "Allow"
                Action:
                  - s3:GetBucketVersioning
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource:
                  - !GetAtt ArtifactBucket.Arn
        - PolicyName: CloudwatchLogAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: "Allow"
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
  
  # TODO: Restrict role using PoLP
  PipelineDeployRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-DeploymentRole
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref AWS::AccountId
              Service:
                - cloudformation.amazonaws.com
                - codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        ## TODO: Restrict access for this role further
        - arn:aws:iam::aws:policy/AdministratorAccess

  PipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        # Used Dynamic referencing to retrieve data from Secrets Manager
        SecretToken: '{{resolve:secretsmanager:GitHubToken:SecretString:token}}'
      Filters:
        - 
          JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref Pipeline
      TargetAction: SourceAction
      Name: PipelineWebhook
      TargetPipelineVersion: !GetAtt Pipeline.Version
      RegisterWithThirdParty: true

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt PipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration: 
                Owner: !Ref GitHubOwner
                Repo: !Ref RepositoryName
                Branch: !Ref BranchName
                OAuthToken: '{{resolve:secretsmanager:GitHubToken:SecretString:token}}'
                PollForSourceChanges: false
        - Name: Build
          Actions:
            - Name: BuildApp
              RunOrder: 2
              InputArtifacts:
                - Name: SourceOutput
              ActionTypeId:
                Category: Build
                Provider: CodeBuild
                Owner: AWS
                Version: '1'
              OutputArtifacts:
                - Name: Build
              Configuration:
                ProjectName: !Ref BuildApp
        - Name: Deploy
          Actions:
            - Name: CreateChangeSet
              RunOrder: 3
              InputArtifacts:
                - Name: Build
              ActionTypeId:
                Category: Deploy
                Provider: CloudFormation
                Owner: AWS
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: "CAPABILITY_IAM,CAPABILITY_NAMED_IAM"
                ChangeSetName: !Sub ${ProjectName}-ChangeSet
                # Temporary Workaround For Account Restriction
                RoleArn: !GetAtt PipelineDeployRole.Arn
                StackName: !Sub ${ProjectName}-${BranchName}-Dev
                TemplatePath: Build::pkg-template.yml
            - Name: DeployChangeSet
              RunOrder: 4
              ActionTypeId:
                Category: Deploy
                Provider: CloudFormation
                Owner: AWS
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                Capabilities: "CAPABILITY_IAM,CAPABILITY_NAMED_IAM"
                ChangeSetName: !Sub ${ProjectName}-ChangeSet
                RoleArn: !GetAtt PipelineDeployRole.Arn
                StackName: !Sub ${ProjectName}-${BranchName}-Dev

  BuildApp:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${ProjectName}-Build
      ServiceRole: !Ref PipelineServiceRole
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yaml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables:
          - Name: SAM_BUCKET
            Type: PLAINTEXT
            Value: !Ref ArtifactBucket
